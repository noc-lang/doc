def concatenativeProgramming = {
    "<p>Noc language is based on the concatenative paradigm, this paradigm is based on the <a href=\"https://en.wikipedia.org/wiki/Function_composition_(computer_science)\">function composition</a> in which we compose several functions to construct a more complex function, for instance:</p>
<pre><code>[Applicative language]
y = foo(x)
z = bar(y)
w = baz(z)

[Concatenative language]
foo bar baz
</code></pre>
<p>Noc is also <a href=\"https://en.wikipedia.org/wiki/Stack-oriented_programming\">stack-based</a> so the expressions can be easily evaluated thanks to the stack machine, when we write an expression it&#39;s pushed in an stack instead of processus registers. Consequently, Noc use the <a href=\"https://en.wikipedia.org/wiki/Reverse_Polish_notation\">Reverse polish notation</a> for evaluate expressions, it&#39;s the most used notation when we compose functions.</p>
<pre><code>Infix        Postfix (reverse polish notation)
5 + 6   -&gt;   5 6 +
</code></pre>
    "
    "concatenative-programming"
}