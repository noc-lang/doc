def opcodesAndPrelude = {
    "
    <p>All opcodes (<a href=\"https://github.com/noc-lang/noc/blob/master/src/Language/Noc/VM/core/opcodes.c\">source</a>) used in the bytecode by the user. </p>

<blockquote>
  <p>In the v0.1.0.0, the mostly of these functions are defined in the <a href=\"https://github.com/noc-lang/noc/blob/23054fe0c3f28b03ca13359594aa99689035d19a/src/Language/Noc/Runtime/Prelude.hs\">Prelude</a>.</p>
</blockquote>

<h4 id=\"dup\">dup</h4>

<blockquote>
  <p>Duplicate the top-stack element</p>
</blockquote>

<pre><code>stack: [1 2] 
dup =&gt; [1 2 2]
</code></pre>

<h4 id=\"pop\">pop</h4>

<blockquote>
  <p>Remove the top-stack element</p>
</blockquote>

<pre><code>stack: [1 2]
pop =&gt; [1]
</code></pre>

<h4 id=\"zap\">zap</h4>

<blockquote>
  <p>Clear all the stack</p>
</blockquote>

<pre><code>stack: [1 2 3]
zap =&gt; []
</code></pre>

<h4 id=\"cat\">cat</h4>

<blockquote>
  <p>Concatenate 2 values (string and quotes)</p>
</blockquote>

<pre><code>[1] [2] cat =&gt; [1 2]
\"Hello, \" \"World!\" cat =&gt; \"Hello, World!\"
</code></pre>

<h4 id=\"rotnm\">rotNM</h4>

<blockquote>
  <p>Rotate the stack N elements M times</p>
</blockquote>

<pre><code>stack: [1 2 3]
2 1 rotNM =&gt; [1 3 2]
3 -1 rotNM =&gt; [2 3 1]
</code></pre>

<h4 id=\"\">+</h4>

<blockquote>
  <p>Sum of the 2 top-stack elements</p>
</blockquote>

<pre><code>stack: [5 6]
+ =&gt; [11]
</code></pre>

<h4 id=\"-1\">-</h4>

<blockquote>
  <p>Difference of the 2 top-stack elements</p>
</blockquote>

<pre><code>stack: [10 9]
- =&gt; [1]
</code></pre>

<h4 id=\"-2\">*</h4>

<blockquote>
  <p>Product of the 2 top-stack elements</p>
</blockquote>

<pre><code>stack: [20 0.5]
* =&gt; [10.0]
</code></pre>

<h4 id=\"-3\">/</h4>

<blockquote>
  <p>Quotient of the 2 top-stack elements</p>
</blockquote>

<pre><code>stack: [10 2]
/ =&gt; [5.0]
</code></pre>

<h4 id=\"-4\">^</h4>

<blockquote>
  <p>The exponent of a number</p>
</blockquote>

<pre><code>stack: [10 2]
^ =&gt; [100]
</code></pre>

<h4 id=\"-5\">></h4>

<blockquote>
  <p>Compare if the first value is greater than the second value</p>
</blockquote>

<pre><code>stack: [5 6]
&gt; =&gt; [False]
</code></pre>

<h4 id=\"-6\">&lt;</h4>

<blockquote>
  <p>Compare if the first value is less than the second value</p>
</blockquote>

<pre><code>stack: [5 6]
&lt; =&gt; [True]
</code></pre>

<h4 id=\"-7\">>=</h4>

<blockquote>
  <p>Compare if the first value is greater or equal than the second value</p>
</blockquote>

<pre><code>stack: [5 5]
&gt;= =&gt; [True]
</code></pre>

<h4 id=\"-8\">&lt;=</h4>

<blockquote>
  <p>Compare if the first value is less or equal than the second value</p>
</blockquote>

<pre><code>stack: [4 5]
&lt;= =&gt; [True]
</code></pre>

<h4 id=\"-9\">==</h4>

<blockquote>
  <p>Compare if the first value is equal to the second value</p>
</blockquote>

<pre><code>stack: [5 5]
== =&gt; [True]
</code></pre>

<h4 id=\"and\">and</h4>

<blockquote>
  <p>The 'AND' logic operator</p>
</blockquote>

<pre><code>True True and =&gt; [True]
</code></pre>

<h4 id=\"or\">or</h4>

<blockquote>
  <p>The 'OR' logic operator</p>
</blockquote>

<pre><code>False False or =&gt; [False]
</code></pre>

<h4 id=\"pushr\">pushr</h4>

<p><strong>In the v0.1.0.0, we have to import the '<a href=\"https://github.com/noc-lang/noc/blob/23054fe0c3f28b03ca13359594aa99689035d19a/src/Language/Noc/Runtime/Lib/Seq.hs\">seq</a>' module.</strong></p>

<blockquote>
  <p>Push a value into a quote</p>
</blockquote>

<pre><code>[5] 5 pushr =&gt; [[5 5]]
</code></pre>

<h4 id=\"popr\">popr</h4>

<p><strong>In the v0.1.0.0, we have to import the '<a href=\"https://github.com/noc-lang/noc/blob/23054fe0c3f28b03ca13359594aa99689035d19a/src/Language/Noc/Runtime/Lib/Seq.hs\">seq</a>' module.</strong></p>

<blockquote>
  <p>Get out the top-element in the quote</p>
</blockquote>

<pre><code>[1 2] popr =&gt; [[1] 2]
</code></pre>

<h4 id=\"unquote\">unquote</h4>

<p><strong>In the v0.1.0.0, we have to import the '<a href=\"https://github.com/noc-lang/noc/blob/23054fe0c3f28b03ca13359594aa99689035d19a/src/Language/Noc/Runtime/Lib/Seq.hs\">seq</a>' module.</strong></p>

<blockquote>
  <p>Evaluate instruction into a quote</p>
</blockquote>

<pre><code>[[5 5 +] 5 5 +] unquote =&gt; [[5 5 +] 10]
</code></pre>"
    "opcodes-prelude-v0.1.0.0"
}